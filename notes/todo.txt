Todo sur l'interpreteur java
Date: mercredi, 06/03/19
Last update: vendredi, 28/06/19

# Date: vendredi, 28/06/19
* -- Ajouter les séquences d'échappement de caractères comme:
\\, \n, \r, \t, \b, \", dans une chaîne de caractères.

* -- Refactoriser les assignements composés pour les utiliser seulement dans la
classe visitAssign.

* -- Ajouter la prise en charge de multiplication entre deux strings,
et la multiplication d'assignement composé *= pour les strings.


# Date: mardi, 25/06/19
* -- Ajouter les opérateurs de prefix et postfix (-- et ++).

# Date: dimanche, 23/06/19
* -- Ajouter l'insertion automatique des point-virgules, ";".
* -- Ajouter la prise en charge de 'linstruction vide représenté par un
  pointvirgule.

# Date: dimanche, 16/06/19
* -- Ajouter les bitwise shift opérateurs. 
comme <<, <<=, >> et >>=.
* -- Ajouter l'opérateur exponentiel.

# Date: vendredi, 14/06/19
* -- Ajout de l'opérateur virgule, (Comma operator) qui permet de garder la
dernière expression, ou sans utiliser de bloc d'instruction:
a = (expression1, expression2, expression3) :
expression1 est évaluée, expression2 est évaluée, 
mais seule expression3 est à la fois évaluée et
affectée à a.
-- ça évite aussi d'utiliser un bloc :
if (a) b=1, c=2, d=3;
-- Ou dans une boucle:
while(a, a<5) {  dosomething(); }
-- Ou dans une for-loop:
for (low=0, high=max; low < high; low = newlow, high = newhigh) {
    dosomething() 
}

# Date: dimanche, 02/06/19
* -- Ajouter les bitwise opérateurs dans Expr.Binary.
De manière à réaliser ce code:
fun isEven(n) { return 1&n; }
* -- Ajout de l'exemple isEven dans le fichier is_even.txt
* -- Ajout de bitwise assignements.
* -- Ajout de "string comparison": comparaison entre les chaînes de caractères.

# Date: samedi, 01/06/19
* -- Ajouter le numéro de colone dans les erreurs de syntaxe.

# Date: mercredi, 22/05/19
-- Chapitre 13:
-- Ajouter la prise en charge l'héritage multiple

# Date: mardi, 14/05/19
-- Chapitre 12 classe
Ajouter la prise en charge de variable static dans la classe.
-- Ajouter la prise en charge des propriétés qui appellent une methode de la
classe lorsque la propriété est invoquer.

# Date: dimanche, 24/03/19
* -- Corriger la fonction unaryExpr pour que !0 renvoie true et non false.
-- Ajouter une fonction input pour gérer la saisie au clavier.

* -- Etendre le résolver pour rapporter une erreur si une variable n'est jamais
utilisée.
-- Etendre le résolver pour rechercher les variables locales par index dans un
tableau plutot que dans un map ce qui rend la recherche plus lente.

# Date: samedi, 23/03/19
* -- Implementer les fonctions anonymes ou lambda.


* -- Implementer l'oprateur +=, -=, *=, /=, %= etc...

* -- Implementer les commentaires imbriqués.
* -- ajout de opérateur ternaire dans la classe expression

-- Ajouter la prise en charge de plusieurs expressions séparées par une
virgule.
Ainsi, on pourra passer plusieurs expressions à l'instruction print.

* -- concaténation de chaine de caractère avec nombre.
* -- Ajout du plus dans les unary opérations.
* -- Gestion de l'erreur pour la division par zéro.
* -- Reporter un runtime error dans visitbinary pour la division par zéro.

Date: lundi, 11/03/19
* -- Créer un lox_02 sans environment, ni variable ou assignment, juste avec
l'instruction print comme étant la dernière fonctionalité ajoutée.

* -- Ajouter un affichage dans l'interpreter pour une expression ou une
instruction rentrée.
Si c'est une instruction, l'executer, si c'est une expression,
l'évaluer, et l'afficher.

* -- Voir où on peut ajouter une runtime-error si une variable n'a pas été
initialisée avant de l'afficher au lieu qu'elle soit implicitement initialiser
par défaut.
Date: mercredi, 13/03/19
* -- Loop statements
Ajouter les instructions break et continue  pour while et for.
* -- ajouter les instructions break
* -- Ajouter l'instruction continue


